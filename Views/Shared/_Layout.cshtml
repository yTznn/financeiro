<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Financeiro</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" />

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/financeiro.styles.css" asp-append-version="true" />

    <style>
        :root {
            --blue: #3c91e6;
            --white: #fff;
            --gray: #f5f6fa;
            --dark: #102444;
            --light-dark: #1a3a6a;
            --scrollbar: rgba(255,255,255,.4);
            --scrollbar-hover: rgba(255,255,255,.7);
        }
        body {
            margin: 0;
            background: var(--gray);
            font-family: 'Segoe UI', sans-serif;
        }
        .sidebar {
            position: fixed;
            width: 250px;
            height: 100%;
            background: var(--dark);
            transition: all 0.3s ease;
            overflow-y: auto;
            overflow-x: hidden;
        }
        .sidebar.close { width: 78px; }
        .sidebar .logo-details {
            height: 60px;
            display: flex;
            align-items: center;
            padding-left: 20px;
        }
        .sidebar .logo-details i { font-size: 30px; color: var(--white); }
        .sidebar .logo-details .logo_name { color: var(--white); font-size: 20px; margin-left: 10px; font-weight: bold; }
        .sidebar.close .logo_name { display: none; }
        .sidebar ul { margin-top: 20px; padding: 0; }
        .sidebar ul li { position: relative; list-style: none; padding-left: 20px; }
        .sidebar ul li a {
            display: flex; align-items: center; height: 50px;
            text-decoration: none; color: var(--white); transition: all 0.2s ease;
        }
        .sidebar ul li a:hover { background: var(--light-dark); border-radius: 6px; }

        /* Nova regra: Estilo para o link ativo */
        .sidebar ul li a.active {
            background: var(--blue);
            border-radius: 6px;
        }

        .sidebar ul li i { min-width: 40px; text-align: center; font-size: 20px; }
        .sidebar ul li ul {
            background-color: var(--light-dark);
            border-radius: 6px; margin: 5px 0; padding-left: 10px;
        }
        /* removemos altura fixa nos <li> internos para não quebrar a janela */
        .sidebar ul li ul li { padding-left: 10px; }
        .sidebar ul li ul li a { font-size: 14px; color: var(--white); }

        .sidebar .profile {
            position: absolute; bottom: 0; width: 100%;
            padding: 10px; text-align: center; background: var(--light-dark);
        }
        .sidebar .profile img {
            width: 40px; height: 40px; border-radius: 50%; object-fit: cover; margin-bottom: 5px;
        }

        .home-section {
            position: relative; left: 250px; width: calc(100% - 250px);
            transition: all 0.3s ease; padding: 20px;
        }
        .sidebar.close ~ .home-section { left: 78px; width: calc(100% - 78px); }
        .toggle-btn { position: absolute; left: 20px; top: 20px; font-size: 24px; color: var(--blue); cursor: pointer; }
        .sidebar.close .links_name { display: none; }
        .sidebar .links_name { transition: opacity 0.3s ease; }
        .sidebar .nav-list li a { white-space: nowrap; }
        .sidebar.close .nav-list li a { justify-content: center; }
        .select2-container--open { z-index: 9999999 !important; }

        /* ===== Janela rolável (5 itens de altura) ===== */
        .menu-window {
            max-height: 225px; /* 5 * 45px (altura mínima do <a>) */
            overflow-y: auto;  /* scroll nativo: mouse/touch */
            overflow-x: hidden;
            scroll-behavior: smooth; /* rolagem suave */
            position: relative;
            mask-image: linear-gradient(to bottom, transparent 0, rgba(0,0,0,.9) 10px, rgba(0,0,0,1) calc(100% - 10px), transparent 100%);
            -webkit-mask-image: linear-gradient(to bottom, transparent 0, rgba(0,0,0,.9) 10px, rgba(0,0,0,1) calc(100% - 10px), transparent 100%);
        }
        /* Altura confortável nos itens (sem travar o <li>) */
        #gerenciamento-list > li.menu-item > a {
            min-height: 45px; display: flex; align-items: center;
        }
        .menu-controls button[disabled] { opacity: 0.35; pointer-events: none; }

        /* ===== Scrollbar discreta ===== */
        .menu-window { scrollbar-width: thin; scrollbar-color: var(--scrollbar) transparent; }
        .menu-window::-webkit-scrollbar { width: 6px; }
        .menu-window::-webkit-scrollbar-track { background: transparent; }
        .menu-window::-webkit-scrollbar-thumb { background-color: var(--scrollbar); border-radius: 6px; }
        .menu-window:hover::-webkit-scrollbar-thumb { background-color: var(--scrollbar-hover); }
    </style>
</head>
<body>
    @{
        // Pega o nome do controller da rota atual
        string? currentController = ViewContext.RouteData.Values["controller"]?.ToString();
        string? currentAction = ViewContext.RouteData.Values["action"]?.ToString();

        // Lista de todos os controllers que estão no submenu "Base de Gerenciamento"
        var gerenciamentoControllers = new[] {
            "Contratos", "Entidades", "Fornecedores", "Instrumentos",
            "LancamentosInstrumento", "Naturezas", "Niveis", "Orcamentos",
            "Perfis", "Usuarios"
        };

        // Verifica se o controller atual está na lista acima
        bool isGerenciamentoActive = gerenciamentoControllers.Contains(currentController);
    }
    
    <div class="sidebar close" id="sidebar">
        <div class="logo-details">
            <i class='bx bx-code-alt'></i>
            <span class="logo_name">Financeiro</span>
        </div>
        <ul class="nav-list" id="accordionSidebar">
            
            <li class="menu-item">
                <a asp-controller="Home" asp-action="Index" class="@(currentController == "Home" && currentAction == "Index" ? "active" : "")">
                    <i class='bx bx-grid-alt'></i><span class="links_name">Dashboard</span>
                </a>
            </li>

            <li>
                <a href="#" class="menu-toggle @(isGerenciamentoActive ? "active" : "")" data-target="#submenu-gerenciamento">
                    <i class='bx bx-data'></i><span class="links_name">Base de Gerenciamento</span>
                </a>

                <ul class="collapse list-unstyled @(isGerenciamentoActive ? "show" : "")" id="submenu-gerenciamento">
                    <li class="menu-window p-0" id="window-gerenciamento">
                        <ul id="gerenciamento-list" class="list-unstyled m-0">
                            <li class="menu-item"><a asp-controller="Contratos" asp-action="Index" class="@(currentController == "Contratos" ? "active" : "")"><i class='bx bxs-file-doc'></i><span class="links_name">Contratos</span></a></li>
                            <li class="menu-item"><a asp-controller="Entidades" asp-action="Index" class="@(currentController == "Entidades" ? "active" : "")"><i class='bx bx-building-house'></i><span class="links_name">Entidades</span></a></li>
                            <li class="menu-item"><a asp-controller="Fornecedores" asp-action="Index" class="@(currentController == "Fornecedores" ? "active" : "")"><i class='bx bx-package'></i><span class="links_name">Fornecedores</span></a></li>
                            <li class="menu-item"><a asp-controller="Instrumentos" asp-action="Index" class="@(currentController == "Instrumentos" ? "active" : "")"><i class='bx bx-book-content'></i><span class="links_name">Instrumentos</span></a></li>
                            <li class="menu-item"><a asp-controller="Naturezas" asp-action="Index" class="@(currentController == "Naturezas" ? "active" : "")"><i class='bx bx-purchase-tag-alt'></i><span class="links_name">Naturezas</span></a></li>
                            <li class="menu-item"><a asp-controller="Niveis" asp-action="Index" class="@(currentController == "Niveis" ? "active" : "")"><i class='bx bx-sitemap'></i><span class="links_name">Níveis</span></a></li>
                            <li class="menu-item"><a asp-controller="Orcamentos" asp-action="Index" class="@(currentController == "Orcamentos" ? "active" : "")"><i class='bx bx-bar-chart-square'></i><span class="links_name">Orçamentos</span></a></li>
                            <li class="menu-item"><a asp-controller="Perfis" asp-action="Index" class="@(currentController == "Perfis" ? "active" : "")"><i class='bx bx-id-card'></i><span class="links_name">Perfis de Acesso</span></a></li>
                            <li class="menu-item"><a asp-controller="RecebimentosInstrumento" asp-action="RelatorioGeral" class="@(currentController == "RecebimentosInstrumento" ? "active" : "")"><i class='bx bxs-dollar-circle'></i><span class="links_name">Recebimentos</span></a></li>
                            <li class="menu-item"><a asp-controller="Usuarios" asp-action="Index" class="@(currentController == "Usuarios" ? "active" : "")"><i class='bx bx-group'></i><span class="links_name">Usuários</span></a></li>
                        </ul>
                    </li>

                    <li class="menu-controls d-flex align-items-center justify-content-between px-2 py-1">
                        <button type="button" class="btn btn-sm btn-link text-white p-0" id="btnPrev" title="Itens anteriores">
                            <i class='bx bx-chevron-up' style="font-size:20px;"></i>
                        </button>
                        <span class="small text-white-50" id="pagerInfo"></span>
                        <button type="button" class="btn btn-sm btn-link text-white p-0" id="btnNext" title="Próximos itens">
                            <i class='bx bx-chevron-down' style="font-size:20px;"></i>
                        </button>
                    </li>
                </ul>
            </li>

            @if (User.Identity?.IsAuthenticated == true)
            {
                <li>
                    <a asp-controller="Usuarios" asp-action="MeusDados" class="@(currentController == "Usuarios" && currentAction == "MeusDados" ? "active" : "")">
                        <i class='bx bxs-user-detail'></i>
                        <span class="links_name">Meus Dados</span>
                    </a>
                </li>

                <li>
                    <form asp-controller="Conta" asp-action="Logout" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-link text-white text-start ps-4" style="text-decoration: none;">
                            <i class='bx bx-log-out'></i><span class="links_name">Sair</span>
                        </button>
                    </form>
                </li>
            }
        </ul>

        <div class="profile">
            @if (User.Identity?.IsAuthenticated == true)
            {
                var hash = User.FindFirst("HashImagem")?.Value;
                if (!string.IsNullOrEmpty(hash))
                {
                    <img src="/Usuarios/ImagemPerfil?hash=@hash" alt="Avatar" />
                }
                <div class="text-white small">
                    @User.Identity?.Name
                    <div class="fw-bold text-white">
                        @User.FindFirst("SiglaEntidade")?.Value
                    </div>
                </div>
            }
        </div>
    </div>

    <section class="home-section">
        <i class='bx bx-menu toggle-btn' id="btn-toggle"></i>
        <div class="container-fluid mt-4">
            @RenderBody()
        </div>
        <footer class="mt-5 text-center text-muted">&copy; 2025 - Sistema Financeiro</footer>
    </section>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/alertas.js"></script>

    <script>
        const sidebar = document.getElementById("sidebar");
        const toggleBtn = document.getElementById("btn-toggle");
        const menuToggles = document.querySelectorAll(".menu-toggle");

        let manuallyToggled = false;

        toggleBtn.addEventListener("click", () => {
            sidebar.classList.toggle("close");
            manuallyToggled = sidebar.classList.contains("close");
        });

        sidebar.addEventListener("mouseenter", () => {
            if (sidebar.classList.contains("close") && !manuallyToggled) {
                sidebar.classList.remove("close");
                sidebar.classList.add("hover-open");
            }
        });

        sidebar.addEventListener("mouseleave", () => {
            if (sidebar.classList.contains("hover-open")) {
                sidebar.classList.add("close");
                sidebar.classList.remove("hover-open");
            }
        });

        window.addEventListener("pageshow", () => {
            manuallyToggled = false;
        });

        menuToggles.forEach(toggle => {
            toggle.addEventListener("click", function (e) {
                e.preventDefault();
                const targetSelector = this.getAttribute("data-target");
                const target = document.querySelector(targetSelector);

                document.querySelectorAll(".nav-list .collapse.show").forEach(open => {
                    if (open !== target) {
                        new bootstrap.Collapse(open).hide();
                    }
                });

                if (target.classList.contains("show")) {
                    new bootstrap.Collapse(target).hide();
                } else {
                    new bootstrap.Collapse(target).show();
                }
            });
        });

        // ===== Rolagem nativa + setas que deslizam 1 item por clique =====
        (function () {
            const WINDOW = 5; // queremos 5 itens visíveis
            const list = document.getElementById('gerenciamento-list');
            const win = document.getElementById('window-gerenciamento');
            const items = Array.from(list.querySelectorAll('li.menu-item'));
            const prev = document.getElementById('btnPrev');
            const next = document.getElementById('btnNext');
            const info = document.getElementById('pagerInfo');
            const submenu = document.getElementById('submenu-gerenciamento');

            if (!win || !items.length) return;

            // calcula a altura real do item (usa o primeiro visível)
            function itemHeight() {
                const first = items[0]?.querySelector('a');
                return Math.max(45, first ? first.getBoundingClientRect().height : 45);
            }

            function clampScroll() {
                // evita "passar" do final por pixel arredondado
                const max = win.scrollHeight - win.clientHeight;
                if (win.scrollTop > max) win.scrollTop = max;
                if (win.scrollTop < 0) win.scrollTop = 0;
            }

            function updateUI() {
                const h = itemHeight();
                const total = items.length;
                // primeira posição (0-based) que está totalmente ou parcialmente visível
                const start = Math.round(win.scrollTop / h);
                const end = Math.min(start + WINDOW, total);

                // pager 1-based
                if (info) info.textContent = `${start + 1}–${end}/${total}`;

                // controles
                prev.disabled = (start <= 0);
                // se o último item visível for o último da lista, desabilita "next"
                next.disabled = (end >= total);
            }

            function scrollByItems(delta) {
                const h = itemHeight();
                win.scrollTo({ top: win.scrollTop + (delta * h), behavior: 'smooth' });
            }

            // setas
            prev?.addEventListener('click', () => scrollByItems(-1));
            next?.addEventListener('click', () => scrollByItems(1));

            // atualiza estado ao rolar (mouse, touch, trackpad)
            let ticking = false;
            win.addEventListener('scroll', () => {
                if (!ticking) {
                    window.requestAnimationFrame(() => {
                        clampScroll();
                        updateUI();
                        ticking = false;
                    });
                    ticking = true;
                }
            });

            // quando abrir o submenu, reseta para o topo e atualiza
            submenu?.addEventListener('show.bs.collapse', () => {
                win.scrollTop = 0;
                updateUI();
            });

            // render inicial
            win.scrollTop = 0;
            updateUI();

            // re-calcula ao redimensionar (mudanças de zoom / fonte)
            window.addEventListener('resize', () => updateUI());
        })();

        // ===== NOVO CÓDIGO: Rola o submenu para o item ativo ao carregar a página =====
        document.addEventListener("DOMContentLoaded", function() {
            const submenu = document.getElementById('submenu-gerenciamento');
            
            // Só executa se o submenu estiver aberto ao carregar a página
            if (submenu && submenu.classList.contains('show')) {
                const activeSubMenuItem = submenu.querySelector('.menu-item a.active');

                if (activeSubMenuItem) {
                    // Rola a janela para que o item ativo fique visível
                    activeSubMenuItem.scrollIntoView({ behavior: 'auto', block: 'nearest' });
                }
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>