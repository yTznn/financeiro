@model IEnumerable<Financeiro.Models.Entidade>
@using System.Linq

@{
    ViewData["Title"] = "Entidades";
    Layout = "_Layout";
}

@functions {
    // Formata CNPJ em 00.000.000/0000-00
    string FormatCnpj(string? cnpj)
    {
        if (string.IsNullOrWhiteSpace(cnpj)) return "";
        var d = new string(cnpj.Where(char.IsDigit).ToArray());
        if (d.Length != 14) return cnpj ?? "";
        return $"{d[..2]}.{d.Substring(2,3)}.{d.Substring(5,3)}/{d.Substring(8,4)}-{d.Substring(12,2)}";
    }
}

<style>
    .entidade-card{ border-left:4px solid var(--blue); transition:transform .06s ease, box-shadow .06s ease; }
    .entidade-card:hover{ transform:translateY(-1px); box-shadow:0 .25rem .75rem rgba(16,36,68,.08); }

    /* CNPJ */
    .cnpj {
        font-variant-numeric: tabular-nums;
        letter-spacing: .2px;
    }

    /* Endereço principal (labels menores, valores maiores) */
    .addr-grid .label{
        color:#6c757d;
        font-size:.82rem;
        text-transform:uppercase;
        letter-spacing:.02em;
    }
    .addr-grid .value{
        color:var(--dark);
        font-weight:600;
        font-size:1.12rem;
        line-height:1.3;
    }
</style>

<div class="d-flex align-items-center justify-content-between mb-3">
    <h2 class="mb-0 fw-bold" style="color:var(--dark);">Entidades</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class='bx bx-plus-circle'></i> Nova Entidade
    </a>
</div>

<div class="row g-3 row-cols-1 row-cols-md-2 row-cols-xl-3">
@foreach (var e in Model)
{
    <div class="col">
        <div class="card h-100 shadow-sm border-0 entidade-card" data-id="@e.Id">
            <div class="card-body d-flex flex-column">
                <div class="d-flex justify-content-between align-items-start mb-2">
                    <div>
                        <div class="fw-semibold" style="color:var(--dark);">@e.Nome</div>
                        <div class="small text-muted">@e.Sigla</div>
                    </div>
                    <span class="badge bg-@(e.Ativo ? "primary" : "secondary")">
                        @(e.Ativo ? "Ativa" : "Inativa")
                    </span>
                </div>

                <div class="small text-muted mb-2">
                    <i class='bx bx-id-card me-1'></i>
                    <span class="cnpj">@FormatCnpj(e.Cnpj)</span>
                </div>

                <div class="mt-auto">
                    <div class="small text-muted mb-1">
                        <i class="bx bx-map me-1"></i> Endereço principal
                    </div>

                    <!-- preenchido via AJAX -->
                    <div id="addr-@e.Id" class="text-muted">
                        <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                        Carregando…
                    </div>
                </div>
            </div>

            <div class="card-footer bg-transparent border-0 pt-0">
                <div class="d-flex flex-wrap gap-2">
                    <a class="btn btn-sm btn-outline-secondary"
                       asp-action="GerenciarEnderecos" asp-route-id="@e.Id" title="Endereços">
                        <i class='bx bx-map'></i> Endereços
                    </a>
                    <a class="btn btn-sm btn-outline-primary"
                       asp-action="Edit" asp-route-id="@e.Id" title="Editar">
                        <i class='bx bx-pencil'></i> Editar
                    </a>
                    <button type="button"
                            class="btn btn-sm btn-outline-danger js-delete"
                            data-id="@e.Id" data-nome="@e.Nome" title="Excluir">
                        <i class='bx bx-trash'></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
}
</div>

<form id="antiForgeryForm">@Html.AntiForgeryToken()</form>

@section Scripts {
<script>
(function () {
    function token() {
        const el = document.querySelector("#antiForgeryForm input[name='__RequestVerificationToken']");
        return el ? el.value : "";
    }
    function formatCep(cep) {
        if (!cep) return '';
        const d = ('' + cep).replace(/\D/g, '');
        return d.replace(/^(\d{5})(\d{3})$/, '$1-$2');
    }

    // Preenche o endereço principal de cada card
    document.querySelectorAll(".entidade-card").forEach(function(card) {
        const id = card.getAttribute("data-id");
        const slot = document.getElementById(`addr-${id}`);

        fetch(`/Entidades/EnderecoPrincipal/${id}`)
            .then(r => r.json())
            .then(j => {
                if (!j?.sucesso) {
                    slot.classList.add("text-danger");
                    slot.textContent = "Falha ao carregar";
                    return;
                }
                if (!j.possuiPrincipal) {
                    slot.innerHTML = `<span class="badge bg-secondary">
                        <i class="bx bx-minus me-1"></i> Sem principal
                    </span>`;
                    return;
                }

                const e = j.endereco || {};
                slot.innerHTML = `
                    <div class="addr-grid">
                        <div class="row gx-2 gy-1">
                            <div class="col-12">
                                <div class="label">Logradouro</div>
                                <div class="value">${e.logradouro ?? ''}</div>
                            </div>
                            <div class="col-4 col-sm-3">
                                <div class="label">Número</div>
                                <div class="value">${e.numero ?? ''}</div>
                            </div>
                            <div class="col-8 col-sm-9">
                                <div class="label">Complemento</div>
                                <div class="value">${e.complemento ?? ''}</div>
                            </div>
                            <div class="col-4 col-sm-3">
                                <div class="label">CEP</div>
                                <div class="value">${formatCep(e.cep)}</div>
                            </div>
                            <div class="col-8 col-sm-3">
                                <div class="label">Bairro</div>
                                <div class="value">${e.bairro ?? ''}</div>
                            </div>
                            <div class="col-8 col-sm-4">
                                <div class="label">Município</div>
                                <div class="value">${e.municipio ?? ''}</div>
                            </div>
                            <div class="col-4 col-sm-2">
                                <div class="label">UF</div>
                                <div class="value">${e.uf ?? ''}</div>
                            </div>
                        </div>
                    </div>`;
            })
            .catch(() => {
                slot.classList.add("text-danger");
                slot.textContent = "Erro";
            });
    });

    // Exclusão com SweetAlert
    document.querySelectorAll('.js-delete').forEach(function(btn) {
        btn.addEventListener('click', function () {
            const id = this.dataset.id;
            const nome = this.dataset.nome;

            if (window.SwalDelete) {
                SwalDelete.fire({
                    title: 'Excluir entidade?',
                    text: `Tem certeza que deseja excluir "${nome}"?`,
                    showCancelButton: true,
                    confirmButtonText: 'Sim, excluir',
                    cancelButtonText: 'Cancelar'
                }).then(r => { if (r.isConfirmed) doDelete(id); });
            } else if (confirm(`Excluir "${nome}"?`)) {
                doDelete(id);
            }
        });
    });

    function doDelete(id) {
        fetch(`/Entidades/Delete/${id}`, {
            method: 'POST',
            headers: { 'RequestVerificationToken': token() }
        })
        .then(resp => resp.json())
        .then(j => {
            if (window.SwalDefault) {
                SwalDefault.fire(j.mensagem, '', j.sucesso ? 'success' : 'error')
                    .then(() => { if (j.sucesso) location.reload(); });
            } else {
                alert(j.mensagem || (j.sucesso ? 'Excluído.' : 'Falha.'));
                if (j.sucesso) location.reload();
            }
        })
        .catch(() => {
            if (window.SwalDefault) SwalDefault.fire('Falha na exclusão.', '', 'error');
            else alert('Falha na exclusão.');
        });
    }
})();
</script>
}