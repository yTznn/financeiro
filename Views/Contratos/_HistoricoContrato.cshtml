@model IEnumerable<Financeiro.Models.ContratoVersao>
@using System.Globalization
@using System.Linq
@using Financeiro.Models

@{
    var br = new CultureInfo("pt-BR");
    int totalPaginas = ViewBag.TotalPaginas;
    int paginaAtual  = ViewBag.PaginaAtual;
    int contratoId   = ViewBag.ContratoId;
    var ultimaVersao = Model?.Any() == true ? Model.Max(m => m.Versao) : 0;

    string BadgeTipo(ContratoVersao v)
    {
        if (v?.TipoAditivo == null) return "<span class=\"badge bg-secondary-subtle text-secondary\">Original</span>";
        return v.TipoAditivo switch
        {
            TipoAditivo.Prazo            => "<span class=\"badge bg-info-subtle text-info\">Prazo</span>",
            TipoAditivo.Acrescimo        => "<span class=\"badge bg-success-subtle text-success\">Acréscimo</span>",
            TipoAditivo.Supressao        => "<span class=\"badge bg-danger-subtle text-danger\">Supressão</span>",
            TipoAditivo.PrazoAcrescimo   => "<span class=\"badge bg-success-subtle text-success\">Prazo + Acréscimo</span>",
            TipoAditivo.PrazoSupressao   => "<span class=\"badge bg-danger-subtle text-danger\">Prazo + Supressão</span>",
            _                            => $"<span class=\"badge bg-secondary-subtle text-secondary\">{v.TipoAditivo}</span>"
        };
    }
}

<style>
  /* escopo isolado para o histórico */
  #hist-contrato .table { font-size: .92rem; }
  #hist-contrato th, #hist-contrato td { vertical-align: middle; white-space: normal; } /* permite quebra */
  #hist-contrato .nowrap { white-space: nowrap; } /* use só onde realmente precisa */
  #hist-contrato .money { font-variant-numeric: tabular-nums; }
  #hist-contrato .col-acao { width: 0.01%; white-space: nowrap; } /* encolhe a coluna de ações */

  /* Botão de cancelar: intuitivo e compacto, sem depender de bibliotecas de ícones */
  #hist-contrato .btn-cancel {
      padding: .25rem .5rem;
      display: inline-flex; align-items: center; gap: .4rem;
      white-space: nowrap; border-radius: .5rem;
  }
  #hist-contrato .btn-cancel .ico {
      width: 1rem; height: 1rem; display:block;
  }
  /* Em telas estreitas, mostra só o ícone (texto some para não quebrar layout) */
  @@media (max-width: 991.98px) {
      #hist-contrato .btn-cancel .lbl { display: none; }
  }
</style>

<div id="hist-contrato">
  <!-- sem table-responsive para evitar barra horizontal; conteúdos podem quebrar -->
  <table class="table table-sm table-hover table-bordered align-middle d-none d-md-table mb-2">
    <thead class="table-light">
      <tr>
        <th class="text-center nowrap">Versão</th>
        <th>Tipo de Aditivo</th>
        <th class="text-center">Início do Aditivo</th>
        <th class="text-end nowrap">Valor</th>
        <th class="text-center">Vigência</th>
        <th class="text-center">Data/Hora do Registro</th>
        <th class="text-center col-acao">Ações</th>
      </tr>
    </thead>
    <tbody>
    @foreach (var v in Model)
    {
        var podeCancelar = v.Versao == ultimaVersao && v.TipoAditivo != null;

        <tr>
          <td class="text-center fw-semibold nowrap">@v.Versao</td>
          <td>@Html.Raw(BadgeTipo(v))</td>
          <td class="text-center">@((v.DataInicioAditivo?.ToString("dd/MM/yyyy")) ?? "---")</td>
          <td class="text-end nowrap money">@v.ValorContrato.ToString("C", br)</td>
          <td class="text-center">@v.DataInicio.ToString("dd/MM/yyyy") a @v.DataFim.ToString("dd/MM/yyyy")</td>
          <td class="text-center">@v.DataRegistro.ToString("dd/MM/yyyy HH:mm")</td>
          <td class="text-center">
            @if (podeCancelar)
            {
              <button class="btn btn-danger btn-cancel js-cancelar-aditivo"
                      data-bs-toggle="tooltip"
                      title="Cancelar aditivo v@v.Versao"
                      aria-label="Cancelar aditivo v@v.Versao"
                      data-versao="@v.Versao"
                      data-contrato-id="@contratoId">
                <!-- Ícone 'menos' em SVG inline (independente de libs) -->
                <svg class="ico" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true" focusable="false">
                  <path d="M2 8a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1z"/>
                </svg>
                <span class="lbl">Cancelar</span>
              </button>
            }
          </td>
        </tr>
    }
    </tbody>
  </table>

  <!-- MOBILE -->
  <div class="accordion d-md-none" id="historicoAccordion">
    @foreach (var v in Model)
    {
        var podeCancelar = v.Versao == ultimaVersao && v.TipoAditivo != null;
        var collapseId = $"collapse-{v.Versao}";
        <div class="accordion-item mb-2">
          <h2 class="accordion-header" id="h@collapseId">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId">
              Versão @v.Versao
            </button>
          </h2>
          <div id="@collapseId" class="accordion-collapse collapse" data-bs-parent="#historicoAccordion">
            <div class="accordion-body small">
              <p class="mb-1"><strong>Tipo:</strong> @Html.Raw(BadgeTipo(v))</p>
              <p class="mb-1"><strong>Início do Aditivo:</strong> @(v.DataInicioAditivo?.ToString("dd/MM/yyyy") ?? "---")</p>
              <p class="mb-1"><strong>Valor:</strong> @v.ValorContrato.ToString("C", br)</p>
              <p class="mb-1"><strong>Vigência:</strong> @v.DataInicio.ToString("dd/MM/yyyy") a @v.DataFim.ToString("dd/MM/yyyy")</p>
              <p class="mb-3"><strong>Registro:</strong> @v.DataRegistro.ToString("dd/MM/yyyy HH:mm")</p>
              @if (podeCancelar)
              {
                <button class="btn btn-danger btn-sm js-cancelar-aditivo"
                        data-versao="@v.Versao"
                        data-contrato-id="@contratoId">
                  <svg class="ico me-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true" focusable="false">
                    <path d="M2 8a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1z"/>
                  </svg>
                  Cancelar
                </button>
              }
            </div>
          </div>
        </div>
    }
  </div>

  @if (totalPaginas > 1)
  {
    <nav class="mt-2">
      <ul class="pagination pagination-sm justify-content-center">
        @for (var i = 1; i <= totalPaginas; i++)
        {
          <li class="page-item @(i == paginaAtual ? "active" : "")">
            <a class="page-link historico-page-link"
               href="#"
               data-page="@i"
               data-contrato-id="@contratoId">@i</a>
          </li>
        }
      </ul>
    </nav>
  }
</div>

<script>
  // tooltips
  document.querySelectorAll('#hist-contrato [data-bs-toggle="tooltip"]').forEach(el => {
    try { new bootstrap.Tooltip(el); } catch (e) {}
  });

  // paginação ajax (mantém modal, sem reload)
  $(document).on('click', '.historico-page-link', function (e) {
      e.preventDefault();
      const page       = $(this).data('page');
      const contratoId = $(this).data('contrato-id');
      $('#historico-container').load('@Url.Action("Historico","Contratos")' + '?id=' + contratoId + '&pag=' + page);
  });

  // cancelar aditivo
  $(document).on('click', '.js-cancelar-aditivo', async function(){
      const contratoId = $(this).data('contrato-id');
      const versao     = $(this).data('versao');

      const result = await Swal.fire({
          title: "Cancelar aditivo (v" + versao + ")?",
          text : "Informe a justificativa:",
          input: "textarea",
          inputAttributes: { maxlength: 1000 },
          inputValidator: (v) => !v ? "A justificativa é obrigatória." : undefined,
          showCancelButton: true,
          confirmButtonText: "Confirmar"
      });

      if (!result.isConfirmed || !result.value) return;

      const r = await fetch('@Url.Action("CancelarAditivo","AditivosContrato")', {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ contratoId, versao, justificativa: result.value })
      });

      if (r.ok) {
          await Swal.fire({ icon:"success", text:"Aditivo cancelado com sucesso." });
          $('#historico-container').load('@Url.Action("Historico","Contratos")' + '?id=' + contratoId + '&pag=1');
      } else {
          Swal.fire({ icon:"error", text:"Não foi possível cancelar o aditivo." });
      }
  });
</script>