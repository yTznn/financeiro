@model IEnumerable<Financeiro.Models.ViewModels.InstrumentoResumoViewModel>
@using System.Globalization

@{
    ViewBag.Title = "Instrumentos";
    Layout = "_Layout";
    var br = new CultureInfo("pt-BR");
}

<h2 class="mb-4 d-flex align-items-center justify-content-between">
    <span>@ViewBag.Title</span>
    <a asp-action="Novo" class="btn btn-primary">+ Novo Instrumento</a>
</h2>

<div class="card shadow-sm border-0">
    <div class="card-body p-0">
        <table class="table table-hover align-middle mb-0 w-100" id="t-instrumentos">
            <thead class="table-light">
                <tr class="text-center">
                    <th style="width:130px">Número</th>
                    <th>Descrição</th>
                    <th style="width:220px">Vigência (Atual)</th>
                    <th style="width:100px">Meses</th>
                    <th class="text-end" style="width:150px">Valor Total (Atual)</th>
                    <th class="text-end" style="width:150px">Valor Mensal (Atual)</th>
                    <th class="text-end" style="width:140px">Saldo a Receber</th>
                    <th style="width:180px">Ações</th>
                </tr>
            </thead>
            <tbody>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="8" class="text-center text-muted py-4">Nenhum instrumento cadastrado.</td>
                </tr>
            }
            else
            {
                foreach (var item in Model)
                {
                    var saldoClass = item.SaldoAtual < 0 ? "text-danger fw-semibold" : "text-body";
                    <tr>
                        <td class="text-center fw-semibold">@item.Numero</td>
                        <td>
                            <div class="obj-cell" title="@item.Descricao">
                                @item.Descricao
                            </div>
                        </td>
                        <td class="text-center">
                            <span class="badge rounded-pill bg-secondary-subtle text-secondary">
                                @item.VigenciaInicio.ToString("dd/MM/yyyy") → @item.VigenciaFimAtual.ToString("dd/MM/yyyy")
                            </span>
                        </td>
                        <td class="text-center">@item.MesesVigentesAtuais</td>
                        <td class="text-end">@item.ValorTotalAtual.ToString("C", br)</td>
                        <td class="text-end">@item.ValorMensalAtual.ToString("C", br)</td>
                        <td class="text-end"><span class="@saldoClass">@item.SaldoAtual.ToString("C", br)</span></td>
                        <td class="text-center">
                            <div class="d-inline-flex gap-1">
                                <a class="btn btn-sm btn-outline-primary" asp-action="Editar" asp-route-id="@item.InstrumentoId">Editar</a>
                                <form asp-action="Excluir" asp-route-id="@item.InstrumentoId" method="post" class="d-inline js-delete" data-nome="@item.Numero">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-outline-danger">Excluir</button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Mensagens (TempData)
        (function () {
            const ok = '@(TempData["Sucesso"] ?? "")';
            const err = '@(TempData["Erro"] ?? "")';
            if (ok)  Swal.fire({ icon: 'success', title: 'Sucesso', text: ok });
            if (err) Swal.fire({ icon: 'error', title: 'Ops', text: err });
        })();

        // Confirmação de exclusão
        document.querySelectorAll('form.js-delete').forEach(f => {
            f.addEventListener('submit', function (e) {
                e.preventDefault();
                const nome = this.getAttribute('data-nome') || 'este instrumento';
                Swal.fire({
                    icon: 'warning',
                    title: 'Confirmar exclusão?',
                    text: `Você está prestes a excluir ${nome}.`,
                    showCancelButton: true,
                    confirmButtonText: 'Excluir',
                    cancelButtonText: 'Cancelar',
                    confirmButtonColor: '#dc3545'
                }).then(res => { if (res.isConfirmed) this.submit(); });
            });
        });
    </script>
    <style>
        .obj-cell { /* ... seu estilo ... */ }
    </style>
}