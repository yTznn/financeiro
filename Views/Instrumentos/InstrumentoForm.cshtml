@model Financeiro.Models.ViewModels.TipoAcordoViewModel

@{
    ViewBag.Title   = Model.Id == 0 ? "Novo Instrumento" : "Editar Instrumento";
    Layout          = "_Layout";
    var action      = (string?)ViewBag.FormAction ?? (Model.Id == 0 ? "Salvar" : "Atualizar");
    var versaoAtual = ViewBag.VersaoAtual as Financeiro.Models.AcordoVersao;
}

<h2 class="mb-4">@ViewBag.Title</h2>

<div class="card shadow-sm border-0 mb-4">
  <div class="card-body p-3 p-md-4">
    <div class="d-flex flex-wrap align-items-center gap-3">
      <div class="flex-grow-1">
        <div class="d-flex align-items-center gap-2 mb-1">
          <span class="badge bg-info-subtle text-info fw-semibold">Instrumento</span>
          @if (Model.Id != 0)
          {
            <span class="badge @(Model.Ativo ? "bg-success" : "bg-secondary")">
              @(Model.Ativo ? "Ativo" : "Inativo")
            </span>
          }
        </div>
        <div class="fs-5 fw-semibold mb-1">
          <span id="resumoEntidade">Entidade: (selecione)</span>
        </div>
        <div class="text-muted">
          Período: <span id="resumoPeriodo">
            @(Model.DataInicio != default && Model.DataFim != default
              ? $"{Model.DataInicio:dd/MM/yyyy} → {Model.DataFim:dd/MM/yyyy}"
              : "definir datas")
          </span>
        </div>
      </div>
      <div class="text-end ms-auto">
        <div class="text-muted small">Valor acordado</div>
        <div class="display-6 fw-bold" id="resumoValor">
          @(Model.Valor > 0 ? Model.Valor.ToString("C", new System.Globalization.CultureInfo("pt-BR")) : "R$ 0,00")
        </div>
      </div>
    </div>
  </div>
</div>

@if (Model.Id != 0)
{
  <div class="mb-3 d-flex flex-wrap gap-2">
    <a asp-controller="AditivosInstrumento" asp-action="Novo" asp-route-instrumentoId="@Model.Id" class="btn btn-outline-primary">
      + Registrar Aditivo
    </a>
    <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#modalHistorico">
      Histórico de Aditivos
    </button>
    @if (versaoAtual != null)
    {
      <a class="btn btn-outline-danger" id="btnCancelarAditivo" data-instrumento="@Model.Id" data-versao="@versaoAtual.Versao">
        Cancelar último aditivo
      </a>
    }
  </div>
}

<div asp-validation-summary="All" class="text-danger mb-2"></div>

<form id="formInstrumento" asp-controller="Instrumentos" asp-action="@action" method="post" class="row g-3" novalidate>
  @Html.AntiForgeryToken()
  <input type="hidden" asp-for="Id" />
  @if (Model.Id != 0) { <input type="hidden" name="id" value="@Model.Id" /> }

  <div class="col-md-6">
    <label asp-for="EntidadeId" class="form-label">Entidade</label>
    <select asp-for="EntidadeId" class="form-select" asp-items="ViewBag.Entidades" id="EntidadeId">
      <option value="">-- selecione --</option>
    </select>
    <span asp-validation-for="EntidadeId" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <label asp-for="Numero" class="form-label">Número</label>
    <input asp-for="Numero" class="form-control" id="Numero" />
    <span asp-validation-for="Numero" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <label asp-for="Valor" class="form-label">Valor acordado</label>
    <input asp-for="Valor" type="text" inputmode="decimal" class="form-control" id="Valor" />
    <span asp-validation-for="Valor" class="text-danger"></span>
  </div>
  <div class="col-md-12">
    <label asp-for="Objeto" class="form-label">Objeto</label>
    <textarea asp-for="Objeto" class="form-control" rows="3" maxlength="4000" id="Objeto"></textarea>
    <span asp-validation-for="Objeto" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <label asp-for="DataInicio" class="form-label">Data de Início</label>
    <input asp-for="DataInicio" type="date" class="form-control" id="DataInicio"/>
    <span asp-validation-for="DataInicio" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <label asp-for="DataFim" class="form-label">Data de Fim</label>
    <input asp-for="DataFim" type="date" class="form-control" id="DataFim"/>
    <span asp-validation-for="DataFim" class="text-danger"></span>
  </div>
  <div class="col-md-3">
    <label asp-for="DataAssinatura" class="form-label">Data de Assinatura</label>
    <input asp-for="DataAssinatura" type="date" class="form-control" id="DataAssinatura"/>
    <span asp-validation-for="DataAssinatura" class="text-danger"></span>
  </div>
  <div class="col-md-3 d-flex align-items-center">
    <div class="form-check mt-4">
      <input asp-for="Ativo" class="form-check-input" id="Ativo" />
      <label asp-for="Ativo" class="form-check-label">Ativo</label>
    </div>
  </div>
  <div class="col-md-12">
    <label asp-for="Observacao" class="form-label">Observações</label>
    <textarea asp-for="Observacao" class="form-control" rows="2" id="Observacao"></textarea>
    <span asp-validation-for="Observacao" class="text-danger"></span>
  </div>
  <div class="col-12 d-flex gap-2">
    <button type="submit" class="btn btn-success" id="btnSubmit">
      @(Model.Id == 0 ? "Salvar" : "Atualizar")
    </button>
    <a asp-controller="Instrumentos" asp-action="Index" class="btn btn-secondary">Cancelar</a>
  </div>
</form>

@if (Model.Id != 0)
{
  <div class="modal fade" id="modalHistorico" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header bg-primary text-white">
          <h5 class="modal-title">Histórico de Aditivos</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body" id="histBody">
          <div class="text-center my-3"><div class="spinner-border"></div></div>
        </div>
      </div>
    </div>
  </div>
}

@section Scripts {
  <partial name="_ValidationScriptsPartial" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
  document.addEventListener('DOMContentLoaded', () => {
    // ====== VALIDADOR DE NÚMERO (pt-BR aceito) ======
    if (window.jQuery && $.validator) {
        $.validator.methods.number = function (value, element) {
            if (this.optional(element)) return true;
            if (/^[-]?(\d+|\d{1,3}(,\d{3})*)(\.\d+)?$/.test(value)) return true;
            const br = value.replace(/\./g, "").replace(",", ".");
            return /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(br);
        };
    }

    // ====== CAMPOS / RESUMO ======
    const selEntidade   = document.getElementById('EntidadeId');
    const resumoEntidade= document.getElementById('resumoEntidade');
    const resumoValor   = document.getElementById('resumoValor');
    const resumoPeriodo = document.getElementById('resumoPeriodo');
    const inNumero      = document.getElementById('Numero');
    const inValor       = document.getElementById('Valor');
    const di            = document.getElementById('DataInicio');
    const df            = document.getElementById('DataFim');
    const obs           = document.getElementById('Observacao');
    const objeto        = document.getElementById('Objeto');

    function getValorDoInput(){
      const raw = (inValor?.value ?? '').toString().trim();
      if (!raw) return 0;
      const s = raw.replace(/\./g, '').replace(',', '.');
      const n = Number(s);
      return isFinite(n) ? n : 0;
    }

    function atualizarResumo(){
      const optText = selEntidade?.selectedOptions?.length ? selEntidade.selectedOptions[0].text : '(selecione)';
      resumoEntidade.textContent = 'Entidade: ' + (optText || '(selecione)');
      const v = getValorDoInput();
      resumoValor.textContent = v.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
      const d1 = di?.value, d2 = df?.value;
      resumoPeriodo.textContent = (d1 && d2)
        ? new Date(d1).toLocaleDateString('pt-BR', { timeZone: 'UTC' }) + ' → ' + new Date(d2).toLocaleDateString('pt-BR', { timeZone: 'UTC' })
        : 'definir datas';
    }

    // impede colagem de emojis/caracteres indesejados
    const badCharsRegex = /[\u{1F300}-\u{1FAFF}\u{1F600}-\u{1F64F}\u{1F1E6}-\u{1F1FF}\u{2600}-\u{26FF}\u{2700}-\u{27BF}*!@@#']/gu;
    function sanitizeInput(el){ if(!el) return; const c=(el.value||'').replace(badCharsRegex,''); if(c!==el.value) el.value=c; }
    [inNumero, obs, objeto].forEach(el=>{
      el?.addEventListener('input', ()=>sanitizeInput(el));
      el?.addEventListener('paste', ()=>setTimeout(()=>sanitizeInput(el),0));
    });

    selEntidade?.addEventListener('change', atualizarResumo);
    if (window.jQuery && selEntidade) { try { $(selEntidade).on('select2:select select2:clear', atualizarResumo); } catch {} }
    inValor?.addEventListener('input', atualizarResumo);
    inValor?.addEventListener('keyup', atualizarResumo);
    inValor?.addEventListener('change', atualizarResumo);
    di?.addEventListener('change', atualizarResumo);
    df?.addEventListener('change', atualizarResumo);
    setTimeout(atualizarResumo, 100);

    // ====== SUBMIT ======
    const form = document.getElementById('formInstrumento');
    form.addEventListener('submit', async (e)=>{
      e.preventDefault();
      const v = getValorDoInput();
      if (!selEntidade.value){
        return Swal.fire({ icon:'warning', title:'Selecione a Entidade', text:'O instrumento precisa estar vinculado a uma Entidade.' });
      }
      if (v <= 0){
        return Swal.fire({ icon:'warning', title:'Valor inválido', text:'Informe um valor maior que zero.' });
      }
      const confirm = await Swal.fire({
        icon:'question',
        title:'@(Model.Id == 0 ? "Confirmar criação do instrumento?" : "Confirmar atualização do instrumento?")',
        showCancelButton:true,
        confirmButtonText:'@(Model.Id == 0 ? "Salvar" : "Atualizar")',
        cancelButtonText:'Cancelar'
      });
      if (confirm.isConfirmed) {
        if (inValor) inValor.value = getValorDoInput();
        form.submit();
      }
    });

    // ====== CANCELAR ÚLTIMO ADITIVO ======
    const btnCancelarAditivo = document.getElementById('btnCancelarAditivo');
    if(btnCancelarAditivo) {
        btnCancelarAditivo.addEventListener('click', async () => {
             const instrumentoId=parseInt(btnCancelarAditivo.getAttribute('data-instrumento'),10);
             let versao=parseInt(btnCancelarAditivo.getAttribute('data-versao'),10) || 0;
             if(!instrumentoId || !versao){ return Swal.fire({ icon:'warning', title:'Nada a cancelar', text:'Não há aditivo vigente para cancelar.' }); }
             const { value: justificativa } = await Swal.fire({
                title:'Cancelar último aditivo', input:'textarea', inputLabel:'Justificativa (obrigatória)',
                inputValidator:v=>!v?.trim() ? 'Informe a justificativa.' : undefined,
                showCancelButton:true, confirmButtonText:'Cancelar aditivo', confirmButtonColor:'#dc3545'
             });
             if(!justificativa) return;
             try{
                const res=await fetch('/AditivosInstrumento/Cancelar',{ method:'POST', headers:{'Content-Type':'application/json'},
                body:JSON.stringify({ instrumentoId, versao, justificativa }) });
                if(!res.ok){ const msg=await res.text(); return Swal.fire({icon:'error', title:'Ops', text:msg||'Falha ao cancelar.'}); }
                location.reload();
             }catch{ Swal.fire({ icon:'error', title:'Ops', text:'Erro de comunicação.' }); }
        });
    }

    // ====== HISTÓRICO (usa _HistoricoAditivosTable com paginação AJAX) ======
    const modal = document.getElementById('modalHistorico');
    const bodyDiv = $('#histBody');
    if (modal && bodyDiv.length) {
      modal.addEventListener('shown.bs.modal', () => {
        const url = '@Url.Action("Historico","Instrumentos")' + '?id=@Model.Id&pag=1';
        bodyDiv.html('<div class="text-center my-3"><div class="spinner-border"></div></div>');
        bodyDiv.load(url); // carrega a partial _HistoricoAditivosTable
      });
    }

    // delega a paginação (caso o script dentro da partial não execute)
    $(document).on('click', '.hist-page-link', function (e) {
        e.preventDefault();
        const p  = $(this).data('pagina');
        const id = $(this).data('instrumento-id') || @Model.Id;
        const url = '@Url.Action("Historico","Instrumentos")' + '?id=' + id + '&pag=' + p;
        $('#histBody').load(url);
    });

    // ====== SweetAlerts de TempData ======
    const ok  = @Html.Raw(Json.Serialize(TempData["Sucesso"]?.ToString() ?? "")); 
    const err = @Html.Raw(Json.Serialize(TempData["Erro"]?.ToString() ?? ""));    
    if (ok)  Swal.fire({ icon:'success', title:'Sucesso', text: ok });
    if (err) Swal.fire({ icon:'error',   title:'Ops',     text: err });
  });
  </script>

  <style>
    .card .badge.bg-info-subtle { background:#e6f4ff !important; color:#0b6bcb !important; }
    .modal-header { border-bottom:none; }
    .table thead.table-light th { background-color:#0d6efd20; }
    .pagination .page-item.active .page-link { background:#0d6efd; border-color:#0d6efd; }
  </style>
}